<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sample.domain.member.mapper.MemberPicResourcesMapper">
  <resultMap id="BaseResultMap" type="cn.sample.domain.member.entity.MemberPicResources">
    <id column="memresid" jdbcType="INTEGER" property="memresid" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="pictype" jdbcType="SMALLINT" property="pictype" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="object_type" jdbcType="TINYINT" property="objectType" />
    <result column="object_id" jdbcType="INTEGER" property="objectId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
    <result column="modifiedon" jdbcType="TIMESTAMP" property="modifiedon" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    memresid, member_id, pictype, url, object_type, object_id, remark, createdon, modifiedon
  </sql>
  <select id="selectByExample" parameterType="cn.sample.domain.member.entity.MemberPicResourcesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_pic_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_pic_resources
    where memresid = #{memresid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member_pic_resources
    where memresid = #{memresid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sample.domain.member.entity.MemberPicResourcesExample">
    delete from member_pic_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sample.domain.member.entity.MemberPicResources">
    <selectKey keyProperty="memresid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member_pic_resources (member_id, pictype, url, 
      object_type, object_id, remark, 
      createdon, modifiedon)
    values (#{memberId,jdbcType=INTEGER}, #{pictype,jdbcType=SMALLINT}, #{url,jdbcType=VARCHAR}, 
      #{objectType,jdbcType=TINYINT}, #{objectId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createdon,jdbcType=TIMESTAMP}, #{modifiedon,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.sample.domain.member.entity.MemberPicResources">
    <selectKey keyProperty="memresid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member_pic_resources
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="pictype != null">
        pictype,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="objectType != null">
        object_type,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
      <if test="modifiedon != null">
        modifiedon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="pictype != null">
        #{pictype,jdbcType=SMALLINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null">
        #{objectType,jdbcType=TINYINT},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedon != null">
        #{modifiedon,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sample.domain.member.entity.MemberPicResourcesExample" resultType="java.lang.Long">
    select count(*) from member_pic_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_pic_resources
    <set>
      <if test="record.memresid != null">
        memresid = #{record.memresid,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.pictype != null">
        pictype = #{record.pictype,jdbcType=SMALLINT},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.objectType != null">
        object_type = #{record.objectType,jdbcType=TINYINT},
      </if>
      <if test="record.objectId != null">
        object_id = #{record.objectId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedon != null">
        modifiedon = #{record.modifiedon,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_pic_resources
    set memresid = #{record.memresid,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      pictype = #{record.pictype,jdbcType=SMALLINT},
      url = #{record.url,jdbcType=VARCHAR},
      object_type = #{record.objectType,jdbcType=TINYINT},
      object_id = #{record.objectId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP},
      modifiedon = #{record.modifiedon,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sample.domain.member.entity.MemberPicResources">
    update member_pic_resources
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="pictype != null">
        pictype = #{pictype,jdbcType=SMALLINT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null">
        object_type = #{objectType,jdbcType=TINYINT},
      </if>
      <if test="objectId != null">
        object_id = #{objectId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedon != null">
        modifiedon = #{modifiedon,jdbcType=TIMESTAMP},
      </if>
    </set>
    where memresid = #{memresid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sample.domain.member.entity.MemberPicResources">
    update member_pic_resources
    set member_id = #{memberId,jdbcType=INTEGER},
      pictype = #{pictype,jdbcType=SMALLINT},
      url = #{url,jdbcType=VARCHAR},
      object_type = #{objectType,jdbcType=TINYINT},
      object_id = #{objectId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP},
      modifiedon = #{modifiedon,jdbcType=TIMESTAMP}
    where memresid = #{memresid,jdbcType=INTEGER}
  </update>
</mapper>