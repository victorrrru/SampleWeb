<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


	<!-- iot数据源 -->
    <bean id="loanDataSource" class="com.alibaba.druid.pool.xa.DruidXADataSource" init-method="init" destroy-method="close">

        <property name="url" value="${db.loan.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${db.pool.connection.initialSize}" />
        <property name="minIdle" value="${db.pool.connection.minIdle}" />
        <property name="maxActive" value="${db.pool.connection.maxActive}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="maxEvictableIdleTimeMillis" value="600000"/>

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache能够提升数据库性能，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
            value="20" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,slf4j" />
        <property name="proxyFilters">
            <list>
                <ref bean="logFilter" />
            </list>
        </property>
    </bean>


    <!--<bean id="userDataSource" class="cn.com.iotrust.datasource.MultipleDataSource">
    	<property name="targetDataSources">
    		<map>
    			<entry key="serpDataSource" value-ref="userDataSource"/>
    		</map>
    	</property>
    	<property name="defaultTargetDataSource" ref="serpDataSource"/>
    </bean>-->

    <bean id="atomikosLoanDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="loan"/>
        <property name="xaDataSource" ref="loanDataSource"/>
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="50" />
        <property name="borrowConnectionTimeout" value="60" />
        <property name="testQuery" value = "select version()" />
    </bean>

    <bean id="loanSqlSessionFactory"
        class="cn.itht.mybatis.DialectalSqlSessionFactoryBean">
        <property name="dialectClass"
            value="cn.com.iotrust.common.mybatis.dialect.MySQLDialect" />
        <property name="dataSource" ref="atomikosLoanDataSource" />
        <property name="databaseIdProvider" ref="databaseIdProvider" />
        <property name="typeAliasesPackage" value="cn.com.iotrust.sys.entity" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations">
            <list>
                <value>classpath*:cn/houhe/api/loan/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>


    <!-- 扫描 mappers , 多个之间用逗号分割 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="loanSqlSessionFactory"/>
        <property name="basePackage" value="cn.houhe.api.loan.mapper" />
    </bean>

    <!--<bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->



    <!-- <bean id="logAspect" class="cn.com.serp.common.log.LogAspect" /> -->



</beans>