<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!--&lt;!&ndash; iot数据源 &ndash;&gt;-->
    <!--<bean id="logDataSource" class="com.alibaba.druid.pool.xa.DruidXADataSource" init-method="init" destroy-method="close">-->

        <!--<property name="url" value="${db.log.url}" />-->
        <!--<property name="username" value="${db.username}" />-->
        <!--<property name="password" value="${db.password}" />-->

        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="${db.pool.connection.initialSize}" />-->
        <!--<property name="minIdle" value="${db.pool.connection.minIdle}" />-->
        <!--<property name="maxActive" value="${db.pool.connection.maxActive}" />-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="60000" />-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000" />-->
        <!--<property name="maxEvictableIdleTimeMillis" value="600000"/>-->
        <!--<property name="validationQuery" value="SELECT 'x'" />-->
        <!--<property name="testWhileIdle" value="true" />-->
        <!--<property name="testOnBorrow" value="false" />-->
        <!--<property name="testOnReturn" value="false" />-->

        <!--&lt;!&ndash; 打开PSCache能够提升数据库性能，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="true" />-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize"-->
            <!--value="20" />-->

        <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
        <!--<property name="filters" value="stat,slf4j" />-->
        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean="logFilter" />-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <!--&lt;!&ndash;<bean id="userDataSource" class="cn.com.iotrust.datasource.MultipleDataSource">-->
    	<!--<property name="targetDataSources">-->
    		<!--<map>-->
    			<!--<entry key="serpDataSource" value-ref="userDataSource"/>-->
    		<!--</map>-->
    	<!--</property>-->
    	<!--<property name="defaultTargetDataSource" ref="serpDataSource"/>-->
    <!--</bean>&ndash;&gt;-->

    <!--<bean id="atomikosLogDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">-->
        <!--<property name="uniqueResourceName" value="log"/>-->
        <!--<property name="xaDataSource" ref="logDataSource"/>-->
        <!--<property name="minPoolSize" value="5" />-->
        <!--<property name="maxPoolSize" value="50" />-->
        <!--<property name="borrowConnectionTimeout" value="60" />-->
        <!--<property name="testQuery" value = "select version()" />-->
    <!--</bean>-->

    <!--<bean id="logSqlSessionFactory"-->
        <!--class="cn.itht.mybatis.DialectalSqlSessionFactoryBean">-->
        <!--<property name="dialectClass"-->
            <!--value="cn.com.iotrust.common.mybatis.dialect.MySQLDialect" />-->
        <!--<property name="dataSource" ref="atomikosLogDataSource" />-->
        <!--<property name="databaseIdProvider" ref="databaseIdProvider" />-->
        <!--<property name="typeAliasesPackage" value="cn.com.iotrust.sys.entity" />-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml" />-->
        <!--<property name="mapperLocations">-->
            <!--<list>-->
                <!--<value>classpath*:cn/houhe/api/log/**/*Mapper.xml</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <!--&lt;!&ndash; 扫描 mappers , 多个之间用逗号分割 &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="sqlSessionFactoryBeanName" value="logSqlSessionFactory"/>-->
        <!--<property name="basePackage" value="cn.houhe.api.log.mapper" />-->
    <!--</bean>-->

    <!--&lt;!&ndash;<bean id="transactionManager"-->
        <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>&ndash;&gt;-->



    <!--&lt;!&ndash; <bean id="logAspect" class="cn.com.serp.common.log.LogAspect" /> &ndash;&gt;-->



</beans>